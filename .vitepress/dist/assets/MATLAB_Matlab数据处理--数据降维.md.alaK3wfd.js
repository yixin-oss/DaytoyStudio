import{_ as a,o as p,c as s,R as t}from"./chunks/framework.OYlsSK07.js";const u=JSON.parse('{"title":"Matlab数据处理--数据降维","description":"","frontmatter":{"title":"Matlab数据处理--数据降维","tags":["Matlab","数据分析"],"categories":"Matlab与数据分析"},"headers":[],"relativePath":"MATLAB/Matlab数据处理--数据降维.md","filePath":"MATLAB/Matlab数据处理--数据降维.md"}'),e={name:"MATLAB/Matlab数据处理--数据降维.md"},n=t(`<p>“维数灾难”：随着维数的增加，数据分析技术会变得异常困难，是许多数据分析技术的瓶颈.</p><p>目前，常用的降维技术有两种，主成分分析、因子分析.</p><h2 id="一、主成分分析" tabindex="-1">一、主成分分析 <a class="header-anchor" href="#一、主成分分析" aria-label="Permalink to &quot;一、主成分分析&quot;">​</a></h2><p>有的问题变量之间存在相关性，它们包含的信息有所重叠，将变量进行线性组合后形成数量较少的新变量，新变量之间不相关，称为主成分.主成分反映原来变量的大量信息且所含信息不重叠，这种方法叫主成分分析.</p><p>主成分分析用较少的变量代替了原来较多的变量，实现了有效的降维，可以使问题简化.</p><p>Steps:</p><ul><li><p>对原数据进行标准化转换.</p></li><li><p>计算样本的相关系数矩阵.</p></li><li><p>计算相关系数矩阵的特征值和特征向量.</p></li><li><p>计算主成分贡献率和累积贡献率，选择重要主成分.主成分的贡献率越大，说明包含原始信息量越大.</p></li><li><p>计算主成分载荷和主成分得分.</p><p><strong>[r,p]=corrcoef(x)</strong> 计算样本的相关系数矩阵</p><h3 id="_1-pcacov指令" tabindex="-1">1.pcacov指令 <a class="header-anchor" href="#_1-pcacov指令" aria-label="Permalink to &quot;1.pcacov指令&quot;">​</a></h3><p><strong>[r,p]=corrcoef(x)</strong> 计算样本相关系数矩阵</p><p><strong>coeff=pcacov(v)</strong> v是样本的协方差矩阵或相关系数矩阵，coeff是p个主成分的系数矩阵，第i列是第i个主成分的系数向量.</p><p><strong>[coeff,latent]=pcacov(v)</strong> latent是p个主成分的方差构成的向量.</p><p><strong>[coeff,latent,explained]=pcacov(v)</strong> explained是p个主成分向量的贡献率.</p><h3 id="_2-princomp指令" tabindex="-1">2.princomp指令 <a class="header-anchor" href="#_2-princomp指令" aria-label="Permalink to &quot;2.princomp指令&quot;">​</a></h3><p>根据样本的观测值矩阵进行主成分分析.</p><p><strong>[coeff,score]=princomp(x)</strong> x是主成分的系数矩阵，第i列是第i个主成分的系数向量，score是主成分得分矩阵，每行代表一个样本，每列代表一个主成分的得分.</p><p><strong>[coeff,score,latent]=princomp(x)</strong> latent指样本协方差矩阵的特征向量.</p><p><strong>[coeff,score,latent,tsquare]=princomp(x)</strong> tsquare是样本的Hotelling T^2统计值，表示某样本和样本观测矩阵中心之间的距离，可以用它寻找远离中心的局端数据.</p><p><strong>per=100*latent/sum(latent)</strong> 主成分的贡献率</p><h2 id="二、因子分析" tabindex="-1">二、因子分析 <a class="header-anchor" href="#二、因子分析" aria-label="Permalink to &quot;二、因子分析&quot;">​</a></h2><p>目的：寻找隐含在现有变量里的若干更基本的有代表性的变量并提取出来.这些更基本的变量叫公共因子.</p><p><strong>Steps:</strong></p><ul><li><p>求样本的相关矩阵</p></li><li><p>求特征值和特征向量.</p></li><li><p>计算方差贡献率和累积方差贡献率.</p></li><li><p>确定因子.</p></li><li><p>进行因子旋转，使因子变量更具有解释性.</p></li><li><p>计算因子得分.</p><p><strong>[lambda,psi,T]=factoran(x,m,paraml,vall,param2,val2)</strong> lambda是因子载荷值；psi是方差值构成的向量；T是旋转矩阵；x是样本数据；m是公共因子数量</p><p><strong>[lambda,psi,T,stats,F]=factoran(x,m)</strong> stats是相关信息统计；F是得分矩阵.</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>r=corrcoef(x)%相关系数矩阵</span></span>
<span class="line"><span>[lambda,psi,T]=factoran(r,3,&#39;xtype&#39;,&#39;covariance&#39;,&#39;delta&#39;,0,&#39;rotate&#39;,&#39;none&#39;)%设三个公共因子</span></span>
<span class="line"><span>ctb=100*sum(lambda.^2)/size(x,2) %计算贡献率</span></span>
<span class="line"><span>cumctb=cumsum(ctb) %计算累积贡献率</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></li></ul>`,7),r=[n];function o(l,i,c,d,m,_){return p(),s("div",null,r)}const g=a(e,[["render",o]]);export{u as __pageData,g as default};
